#!/usr/bin/env ruby

require 'yaml'
require 'oauth'
require_relative '../lib/twitcurlr.rb'

# first we need to authenticate the app if not  done yet.
begin
  auth = {}
  auth_file = File.join(Dir.pwd, 'config', 'auth.yml')
  AUTH = YAML.load_file(auth_file)

  auth['consumer_key'] = AUTH['consumer_key']
  auth['consumer_secret'] = AUTH['consumer_secret']
  auth['token'] = AUTH['token']
  auth['token_secret'] = AUTH['token_secret']

  unless auth['token']
      consumer = OAuth::Consumer.new auth['consumer_key'],
				     auth['consumer_secret'],
				     { :site => 'https://api.twitter.com',
				       :request_token_path => '/oauth/request_token',
				       :authorize_path => '/oauth/authorize',
				       :access_token_path => '/oauth/access_token'}

      request_token = consumer.get_request_token
       
      puts "Visit the following URL, log in if you need to, and authorize the app"
      puts request_token.authorize_url
      puts "When you've authorized that token, enter the verifier code you are assigned:"
      verifier = gets.strip
      puts "Converting request token into access token..."
      access_token=request_token.get_access_token(:oauth_verifier => verifier)
       
      auth['token'] = access_token.token
      auth['token_secret'] = access_token.secret

      #store the auth information
      puts "Storing authentication information for future usage..."
      File.open(auth_file, 'w') {|f| YAML.dump(auth, f)}
  end

  config_file = File.join(Dir.pwd, 'config', 'twitcurlr.yml')
  CONFIG = YAML.load_file(config_file)

  LOGLEVEL = CONFIG['loglevel'] || Logger::INFO
  HASHTAGS = CONFIG['hashtags'].split(',').collect { |hashtag| "#" + hashtag.strip }
 
rescue SystemCallError
  $stderr.puts "What did you do!?!"
  exit(1)
end

# run it.
my_twit = Twitcurlr.new(auth, HASHTAGS)
#puts my_twit.latest_tweets
#puts "-----------------------------------------------"
#puts my_twit.last_tweet
puts my_twit.curl(nil, 40)
